name: 'CI'
on: # rebuild any PRs and main branch changes
  pull_request:
    branches:
      - main

jobs:
  build-package: # make sure build/ci work properly
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v3
        with:
          node-version-file: .node-version
          cache: npm

      - run: npm ci

      - run: npm run package

  test-lint: # make sure build/ci work properly
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v3
        with:
          node-version-file: .node-version
          cache: npm

      - run: npm ci
      - run: npm run ci
      - name: Upload test report
        if: ${{ always() }}
        uses: mikepenz/action-junit-report@0a8a5ba57593d67b2e45de2c543b438412382b7b # v4
        with:
          report_paths: '**/reports/jest.xml'
          github_token: ${{ secrets.GITHUB_TOKEN }}

  use-with-dry-run: # make sure the action works on a clean machine without building
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2 # Because if `fetch-depth >= 2` is not set, unchanged files will be updated.
      - run: "git log -m -1 --name-only --pretty=format: HEAD"
      - run: "git log -m -1 --name-only HEAD"
      - run: "touch .dirty"
      - uses: ./
        with:
          published: true
          force-push: true
          dry-run: true
          github-token: ${{ secrets.GITHUB_TOKEN }}

  use-with-validate-only:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2 # Because if `fetch-depth >= 2` is not set, unchanged files will be updated.
      - run: "git log -m -1 --name-only --pretty=format: HEAD"
      - run: "git log -m -1 --name-only HEAD"
      - run: |
          cp ./src/__tests__/invalidMarkdown.md .
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add -A
          git commit -m "test"
      - name: "Execute validate-only. This step must fail. Print 'Error: Invalid metadata: emoji'."
        uses: ./
        id: action
        with:
          validate-only: true
          commit-sha: .
          github-token: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true
      - if: ${{ steps.action.outcome == 'failure' }}
        run: echo "Success"
      - if: ${{ steps.action.outcome == 'success' }}
        run: |
          echo "Failure"
          exit 1
